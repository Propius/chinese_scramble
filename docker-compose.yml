version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: chinese-scramble-db
    environment:
      POSTGRES_DB: chinesescramble
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - chinese-scramble-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./chinese-scramble-backend
      dockerfile: Dockerfile
    container_name: chinese-scramble-backend
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DATABASE_URL: jdbc:postgresql://postgres:5432/chinesescramble
      DB_USERNAME: postgres
      DB_PASSWORD: postgres123
      CORS_ORIGINS: http://localhost:3010,http://localhost:3000,http://localhost:3001
    ports:
      - "8090:8090"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - chinese-scramble-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8090/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  # Frontend (Placeholder - Not yet implemented)
  # frontend:
  #   build:
  #     context: ./chinese-scramble-frontend
  #     dockerfile: Dockerfile
  #   container_name: chinese-scramble-frontend
  #   environment:
  #     REACT_APP_API_URL: http://localhost:8090
  #   ports:
  #     - "3010:3000"
  #   depends_on:
  #     - backend
  #   networks:
  #     - chinese-scramble-network
  #   restart: unless-stopped

volumes:
  postgres-data:
    driver: local

networks:
  chinese-scramble-network:
    driver: bridge
